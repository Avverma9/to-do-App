{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nconst token = localStorage.getItem(\"token\");\nconst baseUrl = \"http://localhost:4000\";\nconst getAllToDo = setToDo => {\n  axios.get(`${baseUrl}/gettodo`, {\n    headers: {\n      authorization: `${token}`\n    }\n  }).then(_ref => {\n    let {\n      data\n    } = _ref;\n    console.log(\"data ---> \", data.data);\n    setToDo(data.data);\n  });\n};\nconst addToDo = (text, setText, setToDo) => {\n  axios.post(`${baseUrl}/save`, {\n    text\n  }, {\n    headers: {\n      authorization: `${token}`\n    }\n  }).then(data => {\n    console.log(data);\n    toast.success(\"Task added successfully\");\n    setText(\"\");\n    getAllToDo(setToDo);\n  }).catch(err => console.log(err));\n};\nconst updateToDo = (toDoId, text, setToDo, setText, setIsUpdating) => {\n  axios.put(`${baseUrl}/update`, {\n    toDoId,\n    text\n  }, {\n    headers: {\n      authorization: `${token}`\n    }\n  }).then(data => {\n    toast.success(\"Task updated successfully\");\n    setText(\"\");\n    setIsUpdating(false);\n    getAllToDo(setToDo);\n  }).catch(err => console.log(err));\n};\nconst deleteToDo = (_id, setToDo) => {\n  console.log('deltetodo');\n  axios.post(`${baseUrl}/delete`, {\n    _id\n  }, {\n    headers: {\n      authorization: `${token}`\n    }\n  }).then(data => {\n    console.log(data);\n    toast.success(\"Task deleted successfully\");\n    getAllToDo(setToDo);\n  }).catch(err => console.log(err));\n};\nexport { getAllToDo, updateToDo, addToDo, deleteToDo };","map":{"version":3,"names":["axios","toast","token","localStorage","getItem","baseUrl","getAllToDo","setToDo","get","headers","authorization","then","_ref","data","console","log","addToDo","text","setText","post","success","catch","err","updateToDo","toDoId","setIsUpdating","put","deleteToDo","_id"],"sources":["C:/Users/Ankit Verma/Desktop/todo-task-main/client/src/utils/utils.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nconst token = localStorage.getItem(\"token\");\r\n\r\nconst baseUrl = \"http://localhost:4000\";\r\n\r\nconst getAllToDo = (setToDo) => {\r\n  axios\r\n    .get(`${baseUrl}/gettodo`, {\r\n      headers: {\r\n        authorization: `${token}`,\r\n      },\r\n    })\r\n    .then(({ data }) => {\r\n      console.log(\"data ---> \", data.data);\r\n      setToDo(data.data);\r\n    });\r\n};\r\n\r\nconst addToDo = (text, setText, setToDo) => {\r\n  axios\r\n    .post(\r\n      `${baseUrl}/save`,\r\n      { text },\r\n      {\r\n        headers: {\r\n          authorization: `${token}`,\r\n        },\r\n      }\r\n    )\r\n    .then((data) => {\r\n      console.log(data);\r\n      toast.success(\"Task added successfully\");\r\n      setText(\"\");\r\n      getAllToDo(setToDo);\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst updateToDo = (toDoId, text, setToDo, setText, setIsUpdating) => {\r\n  axios\r\n    .put(\r\n      `${baseUrl}/update`,\r\n      { toDoId, text },\r\n      {\r\n        headers: {\r\n          authorization: `${token}`,\r\n        },\r\n      }\r\n    )\r\n    .then((data) => {\r\n      toast.success(\"Task updated successfully\");\r\n      setText(\"\");\r\n      setIsUpdating(false);\r\n      getAllToDo(setToDo);\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst deleteToDo = (_id, setToDo) => {\r\n  console.log('deltetodo')\r\n  axios\r\n    .post(\r\n      `${baseUrl}/delete`,\r\n      { _id },\r\n      {\r\n        headers: {\r\n          authorization: `${token}`,\r\n        },\r\n      }\r\n    )\r\n    .then((data) => {\r\n      console.log(data);\r\n      toast.success(\"Task deleted successfully\");\r\n\r\n      getAllToDo(setToDo);\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport { getAllToDo, updateToDo, addToDo, deleteToDo };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AACtC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAE3C,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,UAAU,GAAIC,OAAO,IAAK;EAC9BP,KAAK,CACFQ,GAAG,CAAE,GAAEH,OAAQ,UAAS,EAAE;IACzBI,OAAO,EAAE;MACPC,aAAa,EAAG,GAAER,KAAM;IAC1B;EACF,CAAC,CAAC,CACDS,IAAI,CAACC,IAAA,IAAc;IAAA,IAAb;MAAEC;IAAK,CAAC,GAAAD,IAAA;IACbE,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,IAAI,CAACA,IAAI,CAAC;IACpCN,OAAO,CAACM,IAAI,CAACA,IAAI,CAAC;EACpB,CAAC,CAAC;AACN,CAAC;AAED,MAAMG,OAAO,GAAGA,CAACC,IAAI,EAAEC,OAAO,EAAEX,OAAO,KAAK;EAC1CP,KAAK,CACFmB,IAAI,CACF,GAAEd,OAAQ,OAAM,EACjB;IAAEY;EAAK,CAAC,EACR;IACER,OAAO,EAAE;MACPC,aAAa,EAAG,GAAER,KAAM;IAC1B;EACF,CAAC,CACF,CACAS,IAAI,CAAEE,IAAI,IAAK;IACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBZ,KAAK,CAACmB,OAAO,CAAC,yBAAyB,CAAC;IACxCF,OAAO,CAAC,EAAE,CAAC;IACXZ,UAAU,CAACC,OAAO,CAAC;EACrB,CAAC,CAAC,CACDc,KAAK,CAAEC,GAAG,IAAKR,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC,CAAC;AACrC,CAAC;AAED,MAAMC,UAAU,GAAGA,CAACC,MAAM,EAAEP,IAAI,EAAEV,OAAO,EAAEW,OAAO,EAAEO,aAAa,KAAK;EACpEzB,KAAK,CACF0B,GAAG,CACD,GAAErB,OAAQ,SAAQ,EACnB;IAAEmB,MAAM;IAAEP;EAAK,CAAC,EAChB;IACER,OAAO,EAAE;MACPC,aAAa,EAAG,GAAER,KAAM;IAC1B;EACF,CAAC,CACF,CACAS,IAAI,CAAEE,IAAI,IAAK;IACdZ,KAAK,CAACmB,OAAO,CAAC,2BAA2B,CAAC;IAC1CF,OAAO,CAAC,EAAE,CAAC;IACXO,aAAa,CAAC,KAAK,CAAC;IACpBnB,UAAU,CAACC,OAAO,CAAC;EACrB,CAAC,CAAC,CACDc,KAAK,CAAEC,GAAG,IAAKR,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC,CAAC;AACrC,CAAC;AAED,MAAMK,UAAU,GAAGA,CAACC,GAAG,EAAErB,OAAO,KAAK;EACnCO,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EACxBf,KAAK,CACFmB,IAAI,CACF,GAAEd,OAAQ,SAAQ,EACnB;IAAEuB;EAAI,CAAC,EACP;IACEnB,OAAO,EAAE;MACPC,aAAa,EAAG,GAAER,KAAM;IAC1B;EACF,CAAC,CACF,CACAS,IAAI,CAAEE,IAAI,IAAK;IACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBZ,KAAK,CAACmB,OAAO,CAAC,2BAA2B,CAAC;IAE1Cd,UAAU,CAACC,OAAO,CAAC;EACrB,CAAC,CAAC,CACDc,KAAK,CAAEC,GAAG,IAAKR,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC,CAAC;AACrC,CAAC;AAED,SAAShB,UAAU,EAAEiB,UAAU,EAAEP,OAAO,EAAEW,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}